// <auto-generated />
using System;
using DBTaller;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBTaller.Migrations
{
    [DbContext(typeof(TallerContext))]
    [Migration("20220819053439_InitialTallerDB")]
    partial class InitialTallerDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DBTaller.models.Administrativo", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminID"), 1L, 1);

                    b.Property<string>("NivelEstudio")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("PersonaID")
                        .HasColumnType("int");

                    b.HasKey("AdminID");

                    b.HasIndex("PersonaID");

                    b.ToTable("Administrativo", (string)null);
                });

            modelBuilder.Entity("DBTaller.models.Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteID"), 1L, 1);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PersonaID")
                        .HasColumnType("int");

                    b.HasKey("ClienteID");

                    b.HasIndex("PersonaID");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("DBTaller.models.Diagnostico", b =>
                {
                    b.Property<int>("DiagID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiagID"), 1L, 1);

                    b.Property<string>("Repuesto")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RevisionNiveles")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoRepuestos")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoRevision")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VehiculoID")
                        .HasColumnType("int");

                    b.HasKey("DiagID");

                    b.HasIndex("VehiculoID");

                    b.ToTable("Diagnostico", (string)null);
                });

            modelBuilder.Entity("DBTaller.models.Direccion", b =>
                {
                    b.Property<int>("DireccionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DireccionID"), 1L, 1);

                    b.Property<string>("Num1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Num2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Num3")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoCalle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Zona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DireccionID");

                    b.ToTable("Direccion", (string)null);
                });

            modelBuilder.Entity("DBTaller.models.Mecanico", b =>
                {
                    b.Property<int>("MecanicoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MecanicoID"), 1L, 1);

                    b.Property<string>("NivelEstudio")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("PersonaID")
                        .HasColumnType("int");

                    b.HasKey("MecanicoID");

                    b.HasIndex("PersonaID");

                    b.ToTable("Mecanico", (string)null);
                });

            modelBuilder.Entity("DBTaller.models.Persona", b =>
                {
                    b.Property<int>("PersonaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonaID"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("DireccionID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Telefono")
                        .HasMaxLength(25)
                        .HasColumnType("int");

                    b.HasKey("PersonaID");

                    b.HasIndex("DireccionID");

                    b.ToTable("Persona", (string)null);
                });

            modelBuilder.Entity("DBTaller.models.Soat", b =>
                {
                    b.Property<int>("SoatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoatID"), 1L, 1);

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("PuedeTransitar")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("VehiculoID")
                        .HasColumnType("int");

                    b.HasKey("SoatID");

                    b.HasIndex("VehiculoID");

                    b.ToTable("Soat", (string)null);
                });

            modelBuilder.Entity("DBTaller.models.Vehiculo", b =>
                {
                    b.Property<int>("VehiculoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehiculoID"), 1L, 1);

                    b.Property<string>("CapacidadPasajeros")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cilindrada")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MecanicoID")
                        .HasColumnType("int");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoVehiculo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VehiculoID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("MecanicoID");

                    b.ToTable("Vehiculos", (string)null);
                });

            modelBuilder.Entity("DBTaller.models.Administrativo", b =>
                {
                    b.HasOne("DBTaller.models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("DBTaller.models.Cliente", b =>
                {
                    b.HasOne("DBTaller.models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("DBTaller.models.Diagnostico", b =>
                {
                    b.HasOne("DBTaller.models.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("DBTaller.models.Mecanico", b =>
                {
                    b.HasOne("DBTaller.models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("DBTaller.models.Persona", b =>
                {
                    b.HasOne("DBTaller.models.Direccion", "Direccion")
                        .WithMany()
                        .HasForeignKey("DireccionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Direccion");
                });

            modelBuilder.Entity("DBTaller.models.Soat", b =>
                {
                    b.HasOne("DBTaller.models.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("DBTaller.models.Vehiculo", b =>
                {
                    b.HasOne("DBTaller.models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBTaller.models.Mecanico", "Mecanico")
                        .WithMany()
                        .HasForeignKey("MecanicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Mecanico");
                });
#pragma warning restore 612, 618
        }
    }
}
